#!/bin/bash

declare -A board

boardRows=4
boardColumns=4

function initBoard() {
	for i in $(seq 1 $boardRows); do
		for j in $(seq 1 $boardColumns); do
			board[$i,$j]=" "
		done
	done
	for p in $(seq 1 2); do
		# FIXME: Same values of x and y in second iteration.
		local x=$(($RANDOM % $boardColumns + 1))
		local y=$(($RANDOM % $boardRows + 1))
		local n=$(randValue)
		board[$x,$y]=$n
	done
}

function readKey() {
	read -sN1 key
	read -sN1 -t 0.0001 k1
	read -sN1 -t 0.0001 k2
	read -sN1 -t 0.0001 k3
	key+=${k1}${k2}${k3}
	case "$key" in
		$'\e[A')
			echo '↑';
		;;
		$'\e[B')
			echo '↓';
		;;
		$'\e[C')
			echo '→';
		;;
		$'\e[D')
			echo "←";
		;;
		*)
			echo $key
		;;
	esac
}

function randValue() {
	# Should return 2 or 4 (more probability to 2's than 4's).
	echo 2
}

function printBoard() {
	echo "-------------------------"
	for i in $(seq 1 $boardRows); do
		echo -n "|"
		for j in $(seq 1 $boardColumns); do
			printf "%4s " ${board[$i,$j]}
			echo -n "|"
		done
		echo -e "\n-------------------------"
	done
}

function main() {
	initBoard
	while true; do
		printBoard
		key=$(readKey)
	done
}

main $@
